3afe26dde0edd96ff292750c3bfe02ff
"use strict";

var _jestCucumber = require("jest-cucumber");
var _react = require("@testing-library/react");
var _Base = _interopRequireDefault(require("../../Base"));
var _react2 = _interopRequireDefault(require("react"));
require("text-encoding");
var _reactRedux = require("react-redux");
var _toolkit = require("@reduxjs/toolkit");
var _cartSlice = _interopRequireDefault(require("../../redux/reducer/cartSlice"));
var _testUtils = require("react-dom/test-utils");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/base.feature");
let store;
let screen;
(0, _jestCucumber.defineFeature)(feature, test => {
  beforeEach(() => {
    store = (0, _toolkit.configureStore)({
      reducer: {
        cart: _cartSlice.default
      }
    });
    screen = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_reactRedux.Provider, {
      store: store
    }, /*#__PURE__*/_react2.default.createElement(_Base.default, null)));
  });
  test("Adding an item to the cart", ({
    given,
    when,
    then,
    and
  }) => {
    given("the user is on the cart page", () => {
      expect(screen).toBeTruthy();
    });
    when('the user clicks the "Add to Cart" button for an item', () => {
      const itemQuantity = screen.getByText("5");
      expect(itemQuantity).toBeTruthy();
      const addCart = screen.getByRole("button", {
        name: "add-to-cart"
      });
      (0, _testUtils.act)(() => {
        _react.fireEvent.click(addCart);
      });
    });
    then("the total quantity should increase by 1", async () => {
      await (0, _react.waitFor)(() => {
        const itemQuantity = screen.getByText("6");
        expect(itemQuantity).toBeTruthy();
      });
    });
  });
  test("Removing an item from the cart", ({
    given,
    when,
    then,
    and
  }) => {
    given("the user is on the cart page", () => {
      expect(screen).toBeDefined();
    });
    when('the user clicks the "Remove" button for an item', async () => {
      const itemQuantity = screen.getByText("5");
      expect(itemQuantity).toBeTruthy();
      const removeCart = screen.getAllByRole("button", {
        name: "remove-cart-button"
      });
      (0, _testUtils.act)(() => {
        _react.fireEvent.click(removeCart[4]);
      });
      await (0, _react.waitFor)(() => {
        expect(itemQuantity.props.children).toEqual("4");
      });
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfamVzdEN1Y3VtYmVyIiwicmVxdWlyZSIsIl9yZWFjdCIsIl9CYXNlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9yZWFjdDIiLCJfcmVhY3RSZWR1eCIsIl90b29sa2l0IiwiX2NhcnRTbGljZSIsIl90ZXN0VXRpbHMiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImZlYXR1cmUiLCJsb2FkRmVhdHVyZSIsInN0b3JlIiwic2NyZWVuIiwiZGVmaW5lRmVhdHVyZSIsInRlc3QiLCJiZWZvcmVFYWNoIiwiY29uZmlndXJlU3RvcmUiLCJyZWR1Y2VyIiwiY2FydCIsImNhcnRTbGljZSIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJQcm92aWRlciIsImdpdmVuIiwid2hlbiIsInRoZW4iLCJhbmQiLCJleHBlY3QiLCJ0b0JlVHJ1dGh5IiwiaXRlbVF1YW50aXR5IiwiZ2V0QnlUZXh0IiwiYWRkQ2FydCIsImdldEJ5Um9sZSIsIm5hbWUiLCJhY3QiLCJmaXJlRXZlbnQiLCJjbGljayIsIndhaXRGb3IiLCJ0b0JlRGVmaW5lZCIsInJlbW92ZUNhcnQiLCJnZXRBbGxCeVJvbGUiLCJwcm9wcyIsImNoaWxkcmVuIiwidG9FcXVhbCJdLCJzb3VyY2VzIjpbImJhc2Uuc3RlcHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmluZUZlYXR1cmUsIGxvYWRGZWF0dXJlIH0gZnJvbSBcImplc3QtY3VjdW1iZXJcIjtcclxuaW1wb3J0IHsgY2xlYW51cCwgZmlyZUV2ZW50LCByZW5kZXIsIHdhaXRGb3IgfSBmcm9tIFwiQHRlc3RpbmctbGlicmFyeS9yZWFjdFwiO1xyXG5pbXBvcnQgQmFzZSBmcm9tIFwiLi4vLi4vQmFzZVwiO1xyXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBcInRleHQtZW5jb2RpbmdcIjtcclxuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuaW1wb3J0IHsgY29uZmlndXJlU3RvcmUgfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiO1xyXG5pbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciwgUm91dGVzLCBSb3V0ZSB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XHJcbmltcG9ydCBjYXJ0U2xpY2UgZnJvbSBcIi4uLy4uL3JlZHV4L3JlZHVjZXIvY2FydFNsaWNlXCI7XHJcbmltcG9ydCB7IGFjdCB9IGZyb20gXCJyZWFjdC1kb20vdGVzdC11dGlsc1wiO1xyXG5jb25zdCBmZWF0dXJlID0gbG9hZEZlYXR1cmUoXCJzcmMvY29tcG9uZW50cy9mZWF0dXJlcy9iYXNlLmZlYXR1cmVcIik7XHJcblxyXG5sZXQgc3RvcmU6IGFueTtcclxubGV0IHNjcmVlbjogYW55O1xyXG5cclxuZGVmaW5lRmVhdHVyZShmZWF0dXJlLCAodGVzdCkgPT4ge1xyXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xyXG4gICAgc3RvcmUgPSBjb25maWd1cmVTdG9yZSh7XHJcbiAgICAgIHJlZHVjZXI6IHtcclxuICAgICAgICBjYXJ0OiBjYXJ0U2xpY2UsXHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuICAgIHNjcmVlbiA9IHJlbmRlcihcclxuICAgICAgPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+XHJcbiAgICAgICAgPEJhc2UgLz5cclxuICAgICAgPC9Qcm92aWRlcj5cclxuICAgICk7XHJcbiAgfSk7XHJcblxyXG4gIHRlc3QoXCJBZGRpbmcgYW4gaXRlbSB0byB0aGUgY2FydFwiLCAoeyBnaXZlbiwgd2hlbiwgdGhlbiwgYW5kIH0pID0+IHtcclxuICAgIGdpdmVuKFwidGhlIHVzZXIgaXMgb24gdGhlIGNhcnQgcGFnZVwiLCAoKSA9PiB7XHJcbiAgICAgIGV4cGVjdChzY3JlZW4pLnRvQmVUcnV0aHkoKTtcclxuICAgIH0pO1xyXG4gICAgd2hlbigndGhlIHVzZXIgY2xpY2tzIHRoZSBcIkFkZCB0byBDYXJ0XCIgYnV0dG9uIGZvciBhbiBpdGVtJywgKCkgPT4ge1xyXG4gICAgICBjb25zdCBpdGVtUXVhbnRpdHkgPSBzY3JlZW4uZ2V0QnlUZXh0KFwiNVwiKTtcclxuICAgICAgZXhwZWN0KGl0ZW1RdWFudGl0eSkudG9CZVRydXRoeSgpO1xyXG4gICAgICBjb25zdCBhZGRDYXJ0ID0gc2NyZWVuLmdldEJ5Um9sZShcImJ1dHRvblwiLCB7IG5hbWU6IFwiYWRkLXRvLWNhcnRcIiB9KTtcclxuICAgICAgYWN0KCgpID0+IHtcclxuICAgICAgICBmaXJlRXZlbnQuY2xpY2soYWRkQ2FydCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICB0aGVuKFwidGhlIHRvdGFsIHF1YW50aXR5IHNob3VsZCBpbmNyZWFzZSBieSAxXCIsIGFzeW5jICgpID0+IHtcclxuICAgICAgYXdhaXQgd2FpdEZvcigoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgaXRlbVF1YW50aXR5ID0gc2NyZWVuLmdldEJ5VGV4dChcIjZcIik7XHJcbiAgICAgICAgZXhwZWN0KGl0ZW1RdWFudGl0eSkudG9CZVRydXRoeSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG4gIHRlc3QoXCJSZW1vdmluZyBhbiBpdGVtIGZyb20gdGhlIGNhcnRcIiwgKHsgZ2l2ZW4sIHdoZW4sIHRoZW4sIGFuZCB9KSA9PiB7XHJcbiAgICBnaXZlbihcInRoZSB1c2VyIGlzIG9uIHRoZSBjYXJ0IHBhZ2VcIiwgKCkgPT4ge1xyXG4gICAgICBleHBlY3Qoc2NyZWVuKS50b0JlRGVmaW5lZCgpO1xyXG4gICAgfSk7XHJcbiAgICB3aGVuKCd0aGUgdXNlciBjbGlja3MgdGhlIFwiUmVtb3ZlXCIgYnV0dG9uIGZvciBhbiBpdGVtJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICBjb25zdCBpdGVtUXVhbnRpdHkgPSBzY3JlZW4uZ2V0QnlUZXh0KFwiNVwiKTtcclxuICAgICAgZXhwZWN0KGl0ZW1RdWFudGl0eSkudG9CZVRydXRoeSgpO1xyXG4gICAgICBjb25zdCByZW1vdmVDYXJ0ID0gc2NyZWVuLmdldEFsbEJ5Um9sZShcImJ1dHRvblwiLCB7XHJcbiAgICAgICAgbmFtZTogXCJyZW1vdmUtY2FydC1idXR0b25cIixcclxuICAgICAgfSk7XHJcbiAgICAgIGFjdCgoKSA9PiB7XHJcbiAgICAgICAgZmlyZUV2ZW50LmNsaWNrKHJlbW92ZUNhcnRbNF0pO1xyXG4gICAgICB9KTtcclxuICAgICAgYXdhaXQgd2FpdEZvcigoKSA9PiB7XHJcbiAgICAgICAgZXhwZWN0KGl0ZW1RdWFudGl0eS5wcm9wcy5jaGlsZHJlbikudG9FcXVhbChcIjRcIik7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsYUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsS0FBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQUksT0FBQSxHQUFBRCxzQkFBQSxDQUFBSCxPQUFBO0FBQ0FBLE9BQUE7QUFDQSxJQUFBSyxXQUFBLEdBQUFMLE9BQUE7QUFDQSxJQUFBTSxRQUFBLEdBQUFOLE9BQUE7QUFFQSxJQUFBTyxVQUFBLEdBQUFKLHNCQUFBLENBQUFILE9BQUE7QUFDQSxJQUFBUSxVQUFBLEdBQUFSLE9BQUE7QUFBMkMsU0FBQUcsdUJBQUFNLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7QUFDM0MsTUFBTUcsT0FBTyxHQUFHLElBQUFDLHlCQUFXLEVBQUMsc0NBQXNDLENBQUM7QUFFbkUsSUFBSUMsS0FBVTtBQUNkLElBQUlDLE1BQVc7QUFFZixJQUFBQywyQkFBYSxFQUFDSixPQUFPLEVBQUdLLElBQUksSUFBSztFQUMvQkMsVUFBVSxDQUFDLE1BQU07SUFDZkosS0FBSyxHQUFHLElBQUFLLHVCQUFjLEVBQUM7TUFDckJDLE9BQU8sRUFBRTtRQUNQQyxJQUFJLEVBQUVDO01BQ1I7SUFDRixDQUFDLENBQUM7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