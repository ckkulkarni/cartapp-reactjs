1c2c0ae675829464ebfbdec0467bc3dc
"use strict";

var _jestCucumber = require("jest-cucumber");
var _react = require("@testing-library/react");
var _Base = _interopRequireDefault(require("../../Base"));
var _react2 = _interopRequireDefault(require("react"));
require("text-encoding");
var _reactRedux = require("react-redux");
var _toolkit = require("@reduxjs/toolkit");
var _reactRouterDom = require("react-router-dom");
var _cartSlice = _interopRequireDefault(require("../../redux/reducer/cartSlice"));
var _testUtils = require("react-dom/test-utils");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/base.feature");
let store;
(0, _jestCucumber.defineFeature)(feature, test => {
  store = (0, _toolkit.configureStore)({
    reducer: {
      cart: _cartSlice.default
    }
  });
  const screen = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_reactRedux.Provider, {
    store: store
  }, /*#__PURE__*/_react2.default.createElement(_Base.default, null)));
  test("Adding an item to the cart", ({
    given,
    when,
    then,
    and
  }) => {
    given("the user is on the cart page", () => {
      expect(screen).toBeTruthy();
    });
    when('the user clicks the "Add to Cart" button for an item', () => {
      const itemQuantity = screen.getByText("5");
      expect(itemQuantity).toBeTruthy();
      const addCart = screen.getByRole("button", {
        name: "add-to-cart"
      });
      (0, _testUtils.act)(() => {
        _react.fireEvent.click(addCart);
      });
    });
    then("the total quantity should increase by 1", async () => {
      await (0, _react.waitFor)(() => {
        const itemQuantity = screen.getByText("6");
        expect(itemQuantity).toBeTruthy();
      });
    });
  });
  test("Removing an item from the cart", ({
    given,
    when,
    then,
    and
  }) => {
    store = (0, _toolkit.configureStore)({
      reducer: {
        cart: _cartSlice.default
      }
    });
    const screen = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_reactRedux.Provider, {
      store: store
    }, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.BrowserRouter, null, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.Routes, null, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.Route, {
      path: "/",
      element: /*#__PURE__*/_react2.default.createElement(_Base.default, null)
    })))));
    given("the user is on the cart page", () => {
      expect(screen).toBeDefined();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfamVzdEN1Y3VtYmVyIiwicmVxdWlyZSIsIl9yZWFjdCIsIl9CYXNlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9yZWFjdDIiLCJfcmVhY3RSZWR1eCIsIl90b29sa2l0IiwiX3JlYWN0Um91dGVyRG9tIiwiX2NhcnRTbGljZSIsIl90ZXN0VXRpbHMiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImZlYXR1cmUiLCJsb2FkRmVhdHVyZSIsInN0b3JlIiwiZGVmaW5lRmVhdHVyZSIsInRlc3QiLCJjb25maWd1cmVTdG9yZSIsInJlZHVjZXIiLCJjYXJ0IiwiY2FydFNsaWNlIiwic2NyZWVuIiwicmVuZGVyIiwiY3JlYXRlRWxlbWVudCIsIlByb3ZpZGVyIiwiZ2l2ZW4iLCJ3aGVuIiwidGhlbiIsImFuZCIsImV4cGVjdCIsInRvQmVUcnV0aHkiLCJpdGVtUXVhbnRpdHkiLCJnZXRCeVRleHQiLCJhZGRDYXJ0IiwiZ2V0QnlSb2xlIiwibmFtZSIsImFjdCIsImZpcmVFdmVudCIsImNsaWNrIiwid2FpdEZvciIsIkJyb3dzZXJSb3V0ZXIiLCJSb3V0ZXMiLCJSb3V0ZSIsInBhdGgiLCJlbGVtZW50IiwidG9CZURlZmluZWQiXSwic291cmNlcyI6WyJiYXNlLnN0ZXBzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZpbmVGZWF0dXJlLCBsb2FkRmVhdHVyZSB9IGZyb20gXCJqZXN0LWN1Y3VtYmVyXCI7XHJcbmltcG9ydCB7IGNsZWFudXAsIGZpcmVFdmVudCwgcmVuZGVyLCB3YWl0Rm9yIH0gZnJvbSBcIkB0ZXN0aW5nLWxpYnJhcnkvcmVhY3RcIjtcclxuaW1wb3J0IEJhc2UgZnJvbSBcIi4uLy4uL0Jhc2VcIjtcclxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgXCJ0ZXh0LWVuY29kaW5nXCI7XHJcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XHJcbmltcG9ydCB7IGNvbmZpZ3VyZVN0b3JlIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIjtcclxuaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIsIFJvdXRlcywgUm91dGUgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xyXG5pbXBvcnQgY2FydFNsaWNlIGZyb20gXCIuLi8uLi9yZWR1eC9yZWR1Y2VyL2NhcnRTbGljZVwiO1xyXG5pbXBvcnQgeyBhY3QgfSBmcm9tIFwicmVhY3QtZG9tL3Rlc3QtdXRpbHNcIjtcclxuY29uc3QgZmVhdHVyZSA9IGxvYWRGZWF0dXJlKFwic3JjL2NvbXBvbmVudHMvZmVhdHVyZXMvYmFzZS5mZWF0dXJlXCIpO1xyXG5sZXQgc3RvcmU6IGFueTtcclxuZGVmaW5lRmVhdHVyZShmZWF0dXJlLCAodGVzdCkgPT4ge1xyXG4gIHN0b3JlID0gY29uZmlndXJlU3RvcmUoe1xyXG4gICAgcmVkdWNlcjoge1xyXG4gICAgICBjYXJ0OiBjYXJ0U2xpY2UsXHJcbiAgICB9LFxyXG4gIH0pO1xyXG4gIGNvbnN0IHNjcmVlbiA9IHJlbmRlcihcclxuICAgIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxyXG4gICAgICA8QmFzZSAvPlxyXG4gICAgPC9Qcm92aWRlcj5cclxuICApO1xyXG4gIHRlc3QoXCJBZGRpbmcgYW4gaXRlbSB0byB0aGUgY2FydFwiLCAoeyBnaXZlbiwgd2hlbiwgdGhlbiwgYW5kIH0pID0+IHtcclxuICAgIGdpdmVuKFwidGhlIHVzZXIgaXMgb24gdGhlIGNhcnQgcGFnZVwiLCAoKSA9PiB7XHJcbiAgICAgIGV4cGVjdChzY3JlZW4pLnRvQmVUcnV0aHkoKTtcclxuICAgIH0pO1xyXG4gICAgd2hlbigndGhlIHVzZXIgY2xpY2tzIHRoZSBcIkFkZCB0byBDYXJ0XCIgYnV0dG9uIGZvciBhbiBpdGVtJywgKCkgPT4ge1xyXG4gICAgICBjb25zdCBpdGVtUXVhbnRpdHkgPSBzY3JlZW4uZ2V0QnlUZXh0KFwiNVwiKTtcclxuICAgICAgZXhwZWN0KGl0ZW1RdWFudGl0eSkudG9CZVRydXRoeSgpO1xyXG4gICAgICBjb25zdCBhZGRDYXJ0ID0gc2NyZWVuLmdldEJ5Um9sZShcImJ1dHRvblwiLCB7IG5hbWU6IFwiYWRkLXRvLWNhcnRcIiB9KTtcclxuICAgICAgYWN0KCgpID0+IHtcclxuICAgICAgICBmaXJlRXZlbnQuY2xpY2soYWRkQ2FydCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICB0aGVuKFwidGhlIHRvdGFsIHF1YW50aXR5IHNob3VsZCBpbmNyZWFzZSBieSAxXCIsIGFzeW5jICgpID0+IHtcclxuICAgICAgYXdhaXQgd2FpdEZvcigoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgaXRlbVF1YW50aXR5ID0gc2NyZWVuLmdldEJ5VGV4dChcIjZcIik7XHJcbiAgICAgICAgZXhwZWN0KGl0ZW1RdWFudGl0eSkudG9CZVRydXRoeSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG4gIHRlc3QoXCJSZW1vdmluZyBhbiBpdGVtIGZyb20gdGhlIGNhcnRcIiwgKHsgZ2l2ZW4sIHdoZW4sIHRoZW4sIGFuZCB9KSA9PiB7XHJcbiAgICBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKHtcclxuICAgICAgcmVkdWNlcjoge1xyXG4gICAgICAgIGNhcnQ6IGNhcnRTbGljZSxcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gICAgY29uc3Qgc2NyZWVuID0gcmVuZGVyKFxyXG4gICAgICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cclxuICAgICAgICA8Um91dGVyPlxyXG4gICAgICAgICAgPFJvdXRlcz5cclxuICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvXCIgZWxlbWVudD17PEJhc2UgLz59IC8+XHJcbiAgICAgICAgICA8L1JvdXRlcz5cclxuICAgICAgICA8L1JvdXRlcj5cclxuICAgICAgPC9Qcm92aWRlcj5cclxuICAgICk7XHJcbiAgICBnaXZlbihcInRoZSB1c2VyIGlzIG9uIHRoZSBjYXJ0IHBhZ2VcIiwgKCkgPT4ge1xyXG4gICAgICBleHBlY3Qoc2NyZWVuKS50b0JlRGVmaW5lZCgpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsYUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsS0FBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQUksT0FBQSxHQUFBRCxzQkFBQSxDQUFBSCxPQUFBO0FBQ0FBLE9BQUE7QUFDQSxJQUFBSyxXQUFBLEdBQUFMLE9BQUE7QUFDQSxJQUFBTSxRQUFBLEdBQUFOLE9BQUE7QUFDQSxJQUFBTyxlQUFBLEdBQUFQLE9BQUE7QUFDQSxJQUFBUSxVQUFBLEdBQUFMLHNCQUFBLENBQUFILE9BQUE7QUFDQSxJQUFBUyxVQUFBLEdBQUFULE9BQUE7QUFBMkMsU0FBQUcsdUJBQUFPLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7QUFDM0MsTUFBTUcsT0FBTyxHQUFHLElBQUFDLHlCQUFXLEVBQUMsc0NBQXNDLENBQUM7QUFDbkUsSUFBSUMsS0FBVTtBQUNkLElBQUFDLDJCQUFhLEVBQUNILE9BQU8sRUFBR0ksSUFBSSxJQUFLO0VBQy9CRixLQUFLLEdBQUcsSUFBQUcsdUJBQWMsRUFBQztJQUNyQkMsT0FBTyxFQUFFO01BQ1BDLElBQUksRUFBRUM7SUFDUjtFQUNGLENBQUMsQ0FBQztFQUNGLE1BQU1DLE1BQU0sR0FBRyxJQUFBQyxhQUFNLGdCQUNuQm5CLE9BQUEsQ0FBQVEsT0FBQSxDQUFBWSxhQUFBLENBQUNuQixXQUFBLENBQUFvQixRQUFRO0lBQUNWLEtBQUssRUFBRUE7RUFBTSxnQkFDckJYLE9BQUEsQ0FBQVEsT0FBQSxDQUFBWSxhQUFBLENBQUN0QixLQUFBLENBQUFVLE9BQUksT0FBRyxDQUNDLENBQ1o7RUFDREssSUFBSSxDQUFDLDRCQUE0QixFQUFFLENBQUM7SUFBRVMsS0FBSztJQUFFQyxJQUFJO0lBQUVDLElBQUk7SUFBRUM7RUFBSSxDQUFDLEtBQUs7SUFDakVILEtBQUssQ0FBQyw4QkFBOEIsRUFBRSxNQUFNO01BQzFDSSxNQUFNLENBQUNSLE1BQU0sQ0FBQyxDQUFDUyxVQUFVLEVBQUU7SUFDN0IsQ0FBQyxDQUFDO0lBQ0ZKLElBQUksQ0FBQyxzREFBc0QsRUFBRSxNQUFNO01BQ2pFLE1BQU1LLFlBQVksR0FBR1YsTUFBTSxDQUFDVyxTQUFTLENBQUMsR0FBRyxDQUFDO01BQzFDSCxNQUFNLENBQUNFLFlBQVksQ0FBQyxDQUFDRCxVQUFVLEVBQUU7TUFDakMsTUFBTUcsT0FBTyxHQUFHWixNQUFNLENBQUNhLFNBQVMsQ0FBQyxRQUFRLEVBQUU7UUFBRUMsSUFBSSxFQUFFO01BQWMsQ0FBQyxDQUFDO01BQ25FLElBQUFDLGNBQUcsRUFBQyxNQUFNO1FBQ1JDLGdCQUFTLENBQUNDLEtBQUssQ0FBQ0wsT0FBTyxDQUFDO01BQzFCLENBQUMsQ0FBQztJQUNKLENBQUMsQ0FBQztJQUNGTixJQUFJLENBQUMseUNBQXlDLEVBQUUsWUFBWTtNQUMxRCxNQUFNLElBQUFZLGNBQU8sRUFBQyxNQUFNO1FBQ2xCLE1BQU1SLFlBQVksR0FBR1YsTUFBTSxDQUFDVyxTQUFTLENBQUMsR0FBRyxDQUFDO1FBQzFDSCxNQUFNLENBQUNFLFlBQVksQ0FBQyxDQUFDRCxVQUFVLEVBQUU7TUFDbkMsQ0FBQyxDQUFDO0lBQ0osQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDO0VBQ0ZkLElBQUksQ0FBQyxnQ0FBZ0MsRUFBRSxDQUFDO0lBQUVTLEtBQUs7SUFBRUMsSUFBSTtJQUFFQyxJQUFJO0lBQUVDO0VBQUksQ0FBQyxLQUFLO0lBQ3JFZCxLQUFLLEdBQUcsSUFBQUcsdUJBQWMsRUFBQztNQUNyQkMsT0FBTyxFQUFFO1FBQ1BDLElBQUksRUFBRUM7TUFDUjtJQUNGLENBQUMsQ0FBQztJQUNGLE1BQU1DLE1BQU0sR0FBRyxJQUFBQyxhQUFNLGdCQUNuQm5CLE9BQUEsQ0FBQVEsT0FBQSxDQUFBWSxhQUFBLENBQUNuQixXQUFBLENBQUFvQixRQUFRO01BQUNWLEtBQUssRUFBRUE7SUFBTSxnQkFDckJYLE9BQUEsQ0FBQVEsT0FBQSxDQUFBWSxhQUFBLENBQUNqQixlQUFBLENBQUFrQyxhQUFNLHFCQUNMckMsT0FBQSxDQUFBUSxPQUFBLENBQUFZLGFBQUEsQ0FBQ2pCLGVBQUEsQ0FBQW1DLE1BQU0scUJBQ0x0QyxPQUFBLENBQUFRLE9BQUEsQ0FBQVksYUFBQSxDQUFDakIsZUFBQSxDQUFBb0MsS0FBSztNQUFDQyxJQUFJLEVBQUMsR0FBRztNQUFDQyxPQUFPLGVBQUV6QyxPQUFBLENBQUFRLE9BQUEsQ0FBQVksYUFBQSxDQUFDdEIsS0FBQSxDQUFBVSxPQUFJO0lBQUksRUFBRyxDQUM5QixDQUNGLENBQ0EsQ0FDWjtJQUNEYyxLQUFLLENBQUMsOEJBQThCLEVBQUUsTUFBTTtNQUMxQ0ksTUFBTSxDQUFDUixNQUFNLENBQUMsQ0FBQ3dCLFdBQVcsRUFBRTtJQUM5QixDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7QUFDSixDQUFDLENBQUMifQ==