2b8e9fad42ee35729c49cb222c014046
"use strict";

var _jestCucumber = require("jest-cucumber");
var _react = require("@testing-library/react");
var _Base = _interopRequireDefault(require("../../Base"));
var _react2 = _interopRequireDefault(require("react"));
require("text-encoding");
var _reactRedux = require("react-redux");
var _toolkit = require("@reduxjs/toolkit");
var _reactRouterDom = require("react-router-dom");
var _cartSlice = _interopRequireDefault(require("../../redux/reducer/cartSlice"));
var _testUtils = require("react-dom/test-utils");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/base.feature");
let store;
let screen;
(0, _jestCucumber.defineFeature)(feature, test => {
  beforeAll(() => {
    store = (0, _toolkit.configureStore)({
      reducer: {
        cart: _cartSlice.default
      }
    });
    screen = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_reactRedux.Provider, {
      store: store
    }, /*#__PURE__*/_react2.default.createElement(_Base.default, null)));
  });
  afterEach(() => {
    (0, _react.cleanup)();
  });
  test("Adding an item to the cart", ({
    given,
    when,
    then,
    and
  }) => {
    given("the user is on the cart page", () => {
      expect(screen).toBeTruthy();
    });
    when('the user clicks the "Add to Cart" button for an item', () => {
      const itemQuantity = screen.getByText("5");
      expect(itemQuantity).toBeTruthy();
      const addCart = screen.getByRole("button", {
        name: "add-to-cart"
      });
      (0, _testUtils.act)(() => {
        _react.fireEvent.click(addCart);
      });
    });
    then("the total quantity should increase by 1", async () => {
      await (0, _react.waitFor)(() => {
        const itemQuantity = screen.getByText("6");
        expect(itemQuantity).toBeTruthy();
      });
    });
  });
  test("Removing an item from the cart", ({
    given,
    when,
    then,
    and
  }) => {
    store = (0, _toolkit.configureStore)({
      reducer: {
        cart: _cartSlice.default
      }
    });
    const screen = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_reactRedux.Provider, {
      store: store
    }, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.BrowserRouter, null, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.Routes, null, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.Route, {
      path: "/",
      element: /*#__PURE__*/_react2.default.createElement(_Base.default, null)
    })))));
    given("the user is on the cart page", () => {
      expect(screen).toBeDefined();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfamVzdEN1Y3VtYmVyIiwicmVxdWlyZSIsIl9yZWFjdCIsIl9CYXNlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9yZWFjdDIiLCJfcmVhY3RSZWR1eCIsIl90b29sa2l0IiwiX3JlYWN0Um91dGVyRG9tIiwiX2NhcnRTbGljZSIsIl90ZXN0VXRpbHMiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImZlYXR1cmUiLCJsb2FkRmVhdHVyZSIsInN0b3JlIiwic2NyZWVuIiwiZGVmaW5lRmVhdHVyZSIsInRlc3QiLCJiZWZvcmVBbGwiLCJjb25maWd1cmVTdG9yZSIsInJlZHVjZXIiLCJjYXJ0IiwiY2FydFNsaWNlIiwicmVuZGVyIiwiY3JlYXRlRWxlbWVudCIsIlByb3ZpZGVyIiwiYWZ0ZXJFYWNoIiwiY2xlYW51cCIsImdpdmVuIiwid2hlbiIsInRoZW4iLCJhbmQiLCJleHBlY3QiLCJ0b0JlVHJ1dGh5IiwiaXRlbVF1YW50aXR5IiwiZ2V0QnlUZXh0IiwiYWRkQ2FydCIsImdldEJ5Um9sZSIsIm5hbWUiLCJhY3QiLCJmaXJlRXZlbnQiLCJjbGljayIsIndhaXRGb3IiLCJCcm93c2VyUm91dGVyIiwiUm91dGVzIiwiUm91dGUiLCJwYXRoIiwiZWxlbWVudCIsInRvQmVEZWZpbmVkIl0sInNvdXJjZXMiOlsiYmFzZS5zdGVwcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVmaW5lRmVhdHVyZSwgbG9hZEZlYXR1cmUgfSBmcm9tIFwiamVzdC1jdWN1bWJlclwiO1xyXG5pbXBvcnQgeyBjbGVhbnVwLCBmaXJlRXZlbnQsIHJlbmRlciwgd2FpdEZvciB9IGZyb20gXCJAdGVzdGluZy1saWJyYXJ5L3JlYWN0XCI7XHJcbmltcG9ydCBCYXNlIGZyb20gXCIuLi8uLi9CYXNlXCI7XHJcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFwidGV4dC1lbmNvZGluZ1wiO1xyXG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xyXG5pbXBvcnQgeyBjb25maWd1cmVTdG9yZSB9IGZyb20gXCJAcmVkdXhqcy90b29sa2l0XCI7XHJcbmltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyLCBSb3V0ZXMsIFJvdXRlIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcclxuaW1wb3J0IGNhcnRTbGljZSBmcm9tIFwiLi4vLi4vcmVkdXgvcmVkdWNlci9jYXJ0U2xpY2VcIjtcclxuaW1wb3J0IHsgYWN0IH0gZnJvbSBcInJlYWN0LWRvbS90ZXN0LXV0aWxzXCI7XHJcbmNvbnN0IGZlYXR1cmUgPSBsb2FkRmVhdHVyZShcInNyYy9jb21wb25lbnRzL2ZlYXR1cmVzL2Jhc2UuZmVhdHVyZVwiKTtcclxuXHJcbmxldCBzdG9yZTogYW55O1xyXG5sZXQgc2NyZWVuOiBhbnk7XHJcblxyXG5kZWZpbmVGZWF0dXJlKGZlYXR1cmUsICh0ZXN0KSA9PiB7XHJcbiAgYmVmb3JlQWxsKCgpID0+IHtcclxuICAgIHN0b3JlID0gY29uZmlndXJlU3RvcmUoe1xyXG4gICAgICByZWR1Y2VyOiB7XHJcbiAgICAgICAgY2FydDogY2FydFNsaWNlLFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcbiAgICBzY3JlZW4gPSByZW5kZXIoXHJcbiAgICAgIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxyXG4gICAgICAgIDxCYXNlIC8+XHJcbiAgICAgIDwvUHJvdmlkZXI+XHJcbiAgICApO1xyXG4gIH0pO1xyXG4gIGFmdGVyRWFjaCgoKSA9PiB7XHJcbiAgICBjbGVhbnVwKCk7XHJcbiAgfSk7XHJcblxyXG4gIHRlc3QoXCJBZGRpbmcgYW4gaXRlbSB0byB0aGUgY2FydFwiLCAoeyBnaXZlbiwgd2hlbiwgdGhlbiwgYW5kIH0pID0+IHtcclxuICAgIGdpdmVuKFwidGhlIHVzZXIgaXMgb24gdGhlIGNhcnQgcGFnZVwiLCAoKSA9PiB7XHJcbiAgICAgIGV4cGVjdChzY3JlZW4pLnRvQmVUcnV0aHkoKTtcclxuICAgIH0pO1xyXG4gICAgd2hlbigndGhlIHVzZXIgY2xpY2tzIHRoZSBcIkFkZCB0byBDYXJ0XCIgYnV0dG9uIGZvciBhbiBpdGVtJywgKCkgPT4ge1xyXG4gICAgICBjb25zdCBpdGVtUXVhbnRpdHkgPSBzY3JlZW4uZ2V0QnlUZXh0KFwiNVwiKTtcclxuICAgICAgZXhwZWN0KGl0ZW1RdWFudGl0eSkudG9CZVRydXRoeSgpO1xyXG4gICAgICBjb25zdCBhZGRDYXJ0ID0gc2NyZWVuLmdldEJ5Um9sZShcImJ1dHRvblwiLCB7IG5hbWU6IFwiYWRkLXRvLWNhcnRcIiB9KTtcclxuICAgICAgYWN0KCgpID0+IHtcclxuICAgICAgICBmaXJlRXZlbnQuY2xpY2soYWRkQ2FydCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICB0aGVuKFwidGhlIHRvdGFsIHF1YW50aXR5IHNob3VsZCBpbmNyZWFzZSBieSAxXCIsIGFzeW5jICgpID0+IHtcclxuICAgICAgYXdhaXQgd2FpdEZvcigoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgaXRlbVF1YW50aXR5ID0gc2NyZWVuLmdldEJ5VGV4dChcIjZcIik7XHJcbiAgICAgICAgZXhwZWN0KGl0ZW1RdWFudGl0eSkudG9CZVRydXRoeSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG4gIHRlc3QoXCJSZW1vdmluZyBhbiBpdGVtIGZyb20gdGhlIGNhcnRcIiwgKHsgZ2l2ZW4sIHdoZW4sIHRoZW4sIGFuZCB9KSA9PiB7XHJcbiAgICBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKHtcclxuICAgICAgcmVkdWNlcjoge1xyXG4gICAgICAgIGNhcnQ6IGNhcnRTbGljZSxcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gICAgY29uc3Qgc2NyZWVuID0gcmVuZGVyKFxyXG4gICAgICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cclxuICAgICAgICA8Um91dGVyPlxyXG4gICAgICAgICAgPFJvdXRlcz5cclxuICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvXCIgZWxlbWVudD17PEJhc2UgLz59IC8+XHJcbiAgICAgICAgICA8L1JvdXRlcz5cclxuICAgICAgICA8L1JvdXRlcj5cclxuICAgICAgPC9Qcm92aWRlcj5cclxuICAgICk7XHJcbiAgICBnaXZlbihcInRoZSB1c2VyIGlzIG9uIHRoZSBjYXJ0IHBhZ2VcIiwgKCkgPT4ge1xyXG4gICAgICBleHBlY3Qoc2NyZWVuKS50b0JlRGVmaW5lZCgpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsYUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsS0FBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQUksT0FBQSxHQUFBRCxzQkFBQSxDQUFBSCxPQUFBO0FBQ0FBLE9BQUE7QUFDQSxJQUFBSyxXQUFBLEdBQUFMLE9BQUE7QUFDQSxJQUFBTSxRQUFBLEdBQUFOLE9BQUE7QUFDQSxJQUFBTyxlQUFBLEdBQUFQLE9BQUE7QUFDQSxJQUFBUSxVQUFBLEdBQUFMLHNCQUFBLENBQUFILE9BQUE7QUFDQSxJQUFBUyxVQUFBLEdBQUFULE9BQUE7QUFBMkMsU0FBQUcsdUJBQUFPLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7QUFDM0MsTUFBTUcsT0FBTyxHQUFHLElBQUFDLHlCQUFXLEVBQUMsc0NBQXNDLENBQUM7QUFFbkUsSUFBSUMsS0FBVTtBQUNkLElBQUlDLE1BQVc7QUFFZixJQUFBQywyQkFBYSxFQUFDSixPQUFPLEVBQUdLLElBQUksSUFBSztFQUMvQkMsU0FBUyxDQUFDLE1BQU07SUFDZEosS0FBSyxHQUFHLElBQUFLLHVCQUFjLEVBQUM7TUFDckJDLE9BQU8sRUFBRTtRQUNQQyxJQUFJLEVBQUVDO01BQ1I7SUFDRixDQUFDLENBQUM7SUFDRlAsTUFBTSxHQUFHLElBQUFRLGFBQU0sZ0JBQ2JwQixPQUFBLENB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